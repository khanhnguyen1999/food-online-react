[{"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/index.tsx":"1","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/App.tsx":"2","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/store/index.ts":"3","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/store/rootReducers.ts":"4","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/auth.selector.ts":"5","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/layouts/Dashboard/index.ts":"6","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/index.ts":"7","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/index.ts":"8","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/AuthGuard/index.ts":"9","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/GuestGuard/index.ts":"10","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/Register.tsx":"11","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/FormTextField.tsx":"12","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/layouts/Dashboard/Dashboard.tsx":"13","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/Login.tsx":"14","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/AuthGuard/AuthGuard.tsx":"15","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/GuestGuard/GuestGuard.tsx":"16","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/style.ts":"17","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/style.ts":"18","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/routes.ts":"19","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/index.ts":"20","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/index.ts":"21","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/containers/Auth/index.ts":"22","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/Header.tsx":"23","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/containers/Auth/Auth.tsx":"24","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/About/index.ts":"25","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Home/index.ts":"26","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/style.ts":"27","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Home/Home.tsx":"28","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/About/About.tsx":"29","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/user.selector.ts":"30","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/react-material-ui-dark-mode/index.tsx":"31","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/NavBar.tsx":"32","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/style.ts":"33","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/apis/user.api.ts":"34","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/index.ts":"35","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/authService.ts":"36","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/httpRequest.ts":"37","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/initRequest.ts":"38","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/user.action.ts":"39","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/user.reducer.ts":"40","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/auth.reducer.ts":"41","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/app.reducer.ts":"42","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/auth.action.ts":"43","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/app.action.ts":"44","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/index.ts":"45","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/Foods.tsx":"46","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/food.action.ts":"47","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/food.reducer.ts":"48","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/food.selector.ts":"49","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/FoodDetail/index.ts":"50","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/FoodDetail/FoodDetail.tsx":"51","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/TablePaginationActions.tsx":"52","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Dialog/index.ts":"53","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Dialog/Dialog.tsx":"54","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/app.selector.ts":"55"},{"size":984,"mtime":1609141651434,"results":"56","hashOfConfig":"57"},{"size":1196,"mtime":1609136624073,"results":"58","hashOfConfig":"57"},{"size":304,"mtime":1609136624080,"results":"59","hashOfConfig":"57"},{"size":396,"mtime":1609144048541,"results":"60","hashOfConfig":"57"},{"size":208,"mtime":1609052206364,"results":"61","hashOfConfig":"57"},{"size":38,"mtime":1608459818973,"results":"62","hashOfConfig":"57"},{"size":37,"mtime":1608459818972,"results":"63","hashOfConfig":"57"},{"size":101,"mtime":1609052206354,"results":"64","hashOfConfig":"57"},{"size":37,"mtime":1609052206359,"results":"65","hashOfConfig":"57"},{"size":38,"mtime":1609052206360,"results":"66","hashOfConfig":"57"},{"size":8914,"mtime":1609232377800,"results":"67","hashOfConfig":"57"},{"size":670,"mtime":1609052206353,"results":"68","hashOfConfig":"57"},{"size":1075,"mtime":1609209330240,"results":"69","hashOfConfig":"57"},{"size":4935,"mtime":1609136982090,"results":"70","hashOfConfig":"57"},{"size":384,"mtime":1609052206359,"results":"71","hashOfConfig":"57"},{"size":365,"mtime":1609052206359,"results":"72","hashOfConfig":"57"},{"size":1096,"mtime":1609052206358,"results":"73","hashOfConfig":"57"},{"size":817,"mtime":1609052206356,"results":"74","hashOfConfig":"57"},{"size":643,"mtime":1609145353863,"results":"75","hashOfConfig":"57"},{"size":35,"mtime":1608459818969,"results":"76","hashOfConfig":"57"},{"size":35,"mtime":1608459818968,"results":"77","hashOfConfig":"57"},{"size":33,"mtime":1609052206352,"results":"78","hashOfConfig":"57"},{"size":6591,"mtime":1609141319796,"results":"79","hashOfConfig":"57"},{"size":820,"mtime":1609136982046,"results":"80","hashOfConfig":"57"},{"size":34,"mtime":1608459818970,"results":"81","hashOfConfig":"57"},{"size":33,"mtime":1608459818971,"results":"82","hashOfConfig":"57"},{"size":1706,"mtime":1609052206351,"results":"83","hashOfConfig":"57"},{"size":123,"mtime":1608459818970,"results":"84","hashOfConfig":"57"},{"size":126,"mtime":1608459818970,"results":"85","hashOfConfig":"57"},{"size":207,"mtime":1609052206365,"results":"86","hashOfConfig":"57"},{"size":1548,"mtime":1609137820583,"results":"87","hashOfConfig":"57"},{"size":2671,"mtime":1609144320318,"results":"88","hashOfConfig":"57"},{"size":488,"mtime":1608459818969,"results":"89","hashOfConfig":"57"},{"size":166,"mtime":1609136624074,"results":"90","hashOfConfig":"57"},{"size":167,"mtime":1609136624078,"results":"91","hashOfConfig":"57"},{"size":1140,"mtime":1609136624077,"results":"92","hashOfConfig":"57"},{"size":577,"mtime":1609226754711,"results":"93","hashOfConfig":"57"},{"size":1681,"mtime":1609232381608,"results":"94","hashOfConfig":"57"},{"size":2271,"mtime":1609232381575,"results":"95","hashOfConfig":"57"},{"size":591,"mtime":1609146093953,"results":"96","hashOfConfig":"57"},{"size":579,"mtime":1609232381609,"results":"97","hashOfConfig":"57"},{"size":782,"mtime":1609216984210,"results":"98","hashOfConfig":"57"},{"size":1391,"mtime":1609136982017,"results":"99","hashOfConfig":"57"},{"size":450,"mtime":1609224655500,"results":"100","hashOfConfig":"57"},{"size":35,"mtime":1609145111302,"results":"101","hashOfConfig":"57"},{"size":6370,"mtime":1609208259836,"results":"102","hashOfConfig":"57"},{"size":2921,"mtime":1609232381611,"results":"103","hashOfConfig":"57"},{"size":1123,"mtime":1609232381585,"results":"104","hashOfConfig":"57"},{"size":531,"mtime":1609226484369,"results":"105","hashOfConfig":"57"},{"size":40,"mtime":1609145137298,"results":"106","hashOfConfig":"57"},{"size":3758,"mtime":1609232381609,"results":"107","hashOfConfig":"57"},{"size":2709,"mtime":1609207647542,"results":"108","hashOfConfig":"57"},{"size":34,"mtime":1609209241453,"results":"109","hashOfConfig":"57"},{"size":2018,"mtime":1609226633586,"results":"110","hashOfConfig":"57"},{"size":189,"mtime":1609210036373,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"dolxp1",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/index.tsx",[],["234","235"],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/App.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/store/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/store/rootReducers.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/auth.selector.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/layouts/Dashboard/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/AuthGuard/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/GuestGuard/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/Register.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/FormTextField.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/layouts/Dashboard/Dashboard.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/Login.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/AuthGuard/AuthGuard.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/guards/GuestGuard/GuestGuard.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Register/style.ts",["236","237","238","239","240","241"],"import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    form: {\n      display: \"flex\",\n      flexDirection: 'column'\n    },\n    formContainer: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    submitButton: {\n      width: '90px',\n      height: '50px'\n    },\n    root: {\n      maxWidth: '450px',\n      display: 'block',\n      margin: '0 auto',\n    },\n    textField: {\n      '& > *': {\n        width: '100%',\n      },\n    },\n    title: { textAlign: 'center' },\n    successMessage: { color: 'green' },\n    errorMessage: { color: 'red' },\n  })\n);\n\nexport default useStyles","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Login/style.ts",["242","243","244","245","246","247"],"import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '450px',\n      display: 'block',\n      margin: '0 auto',\n    },\n    textField: {\n      '& > *': {\n        width: '100%',\n      },\n    },\n    submitButton: {\n      marginTop: '24px',\n    },\n    title: { textAlign: 'center' },\n    successMessage: { color: 'green' },\n    errorMessage: { color: 'red' },\n  })\n);\n\nexport default useStyles","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/routes.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/containers/Auth/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/Header.tsx",["248","249"],"import React, { useState, useEffect } from 'react';\n\n\n// material core\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { useChangeTheme } from './react-material-ui-dark-mode';\nimport Select from '@material-ui/core/Select';\n\n\nimport { useHistory } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { currentUserSelector } from \"selectors/user.selector\";\n\nimport { actLogoutSuccess } from 'actions/auth.action'\n// styles\nimport useStyles from './style';\nimport { authService } from 'services';\n\n\nfunction Header() {\n  const classes = useStyles();\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const userData = useSelector(currentUserSelector)\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n  const handleLogOut = () => {\n    authService.logOut();\n    dispatch(actLogoutSuccess())\n    history.push(\"/login\")\n  }\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const theme = useTheme();\n  const changeTheme = useChangeTheme();\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>\n        {\n          userData && userData.lastname\n        }\n      </MenuItem>\n      <MenuItem onClick={handleLogOut}>LogOut</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          title=\"Toggle light/dark mode\"\n          onClick={() => changeTheme()}\n        >\n          {theme.palette.type === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\n        </IconButton>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  const [language, setLanguage] = useState('')\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLanguage(event.target.value as string);\n  };\n\n\n  // dark mode \n\n  // useEffect(() => {\n  //   onChangeHandle(darkMode.value);\n  // });\n\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          Food Online\n          </Typography>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n        <div className={classes.grow} />\n        <div className={classes.sectionDesktop}>\n          <Select\n            labelId=\"language\"\n            id=\"language\"\n            name=\"language\"\n            value={language}\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Vietnamese</MenuItem>\n            <MenuItem value={20}>English</MenuItem>\n          </Select>\n          <MenuItem>\n            <IconButton\n              title=\"Toggle light/dark mode\"\n              onClick={() => changeTheme()}\n            >\n              {theme.palette.type === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\n            </IconButton>\n          </MenuItem>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n        </div>\n        <div className={classes.sectionMobile}>\n          <IconButton\n            aria-label=\"show more\"\n            aria-controls={mobileMenuId}\n            aria-haspopup=\"true\"\n            onClick={handleMobileMenuOpen}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n        </div>\n        {renderMenu}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header;\n","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/containers/Auth/Auth.tsx",["250"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authService } from 'services';\n\nimport { actLoginSuccess } from 'store/auth/action';\nimport { actSetUserInfor } from 'store/user/action';\n\nimport {fetchUserData } from 'apis/user.api';\n\ntype IProps = {\n  children: any\n}\n\nconst Auth  = ({ children }: IProps) => {\n  const dispatch = useDispatch();\n  const token = authService.getAccessToken();\n\n  useEffect(() => {\n    if(!token) return;\n    dispatch(actLoginSuccess(token));\n\n    async function fetchUser()  {\n      const res = await fetchUserData(`/user?token=${token}`);\n      dispatch(actSetUserInfor({\n        user: res.data[0]\n      }))\n    }\n\n    fetchUser();\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  return children\n}\n\nexport default Auth;\n","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/About/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Home/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/style.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Home/Home.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/About/About.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/user.selector.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Header/react-material-ui-dark-mode/index.tsx",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/NavBar.tsx",["251","252","253"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// material core\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\n\n// material icon\nimport MailIcon from '@material-ui/icons/Mail';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { asyncFetchFoodData } from '../../actions/food.action'\n// styles\nimport useStyles from './style';\n\nfunction NavBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  // fetch data food\n  useEffect(() => {\n    const response: any = dispatch(asyncFetchFoodData())\n  }, [])\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const _handleNavigate = (path: string) => () => {\n    history.push(path)\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <ListItem button onClick={_handleNavigate('/home')}>\n          <ListItemIcon><InboxIcon /></ListItemIcon>\n          <ListItemText primary=\"Home\" />\n        </ListItem>\n        <ListItem button onClick={_handleNavigate('/about')}>\n          <ListItemIcon><MailIcon /></ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n        <ListItem button onClick={_handleNavigate('/foods')}>\n          <ListItemIcon><FastfoodIcon /></ListItemIcon>\n          <ListItemText primary=\"Foods\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n    </nav>\n  )\n}\n\nexport default NavBar\n","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/NavBar/style.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/apis/user.api.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/authService.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/httpRequest.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/services/initRequest.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/user.action.ts",["254"],"import axios from 'axios'\nimport { Dispatch } from 'redux'\nimport { actLoginSuccess } from './auth.action'\n\nconst nameSpace = 'user:';\n\nexport const REGISTER_USER = `${nameSpace}REGISTER_USER`\nexport const SET_USER_INFOR = `${nameSpace}SET_USER_INFOR`;\nexport const GET_USER_BY_ID = `${nameSpace}GET_USER_BY_ID`;\nexport const SET_USER_DETAIL = `${nameSpace}SET_USER_DETAIL`;\ntype USER = {\n  user: any\n}\n\ntype RegisterDataType = {\n  email: string,\n  firstname: string,\n  lastname: string,\n  gender: string,\n  language: string,\n  token: string\n}\n\nexport const actSetUserInfor = ({ user }: USER) => {\n  return {\n    type: SET_USER_INFOR,\n    payload: user\n  }\n}\n\nexport const asyncHandleRegister = (data: RegisterDataType) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const findEmail = await axios.get(`http://localhost:3000/user?email=${data.email}`)\n      if (findEmail.status !== 200 && findEmail.status !== 201) {\n        return {\n          ok: false,\n          error: \"Email was wrong.please input another email...\"\n        }\n      }\n      else {\n        const response = await axios.post(`http://localhost:3000/user`, data)\n        if (response.status !== 201) {\n          return {\n            ok: false,\n            error: response.data.error\n          }\n        } else {\n          const user = response.data;\n          console.log(\"user \", user)\n          const token = response.data.token;\n          localStorage.setItem(\"token\", token)\n          // dispatch(actLoginSuccess({ token }));\n          dispatch(actSetUserInfor({ user }));\n          return { ok: true }\n        }\n      }\n    } catch (err) {\n      return { ok: false, error: \"Error. Please register again..\" }\n    }\n  }\n}\n\n// export const asyncGetUserById = ({ userid }) => {\n//   return async (dispatch: Dispatch) => {\n//     try {\n//       const response = await userService.getUserById({ userid });\n\n//       if (response?.data?.status === 200) {\n//         const user = response.data.user;\n//         dispatch(actSetUserInfor({ user }));\n//         return {\n//           ok: true,\n//           user: user\n//         }\n//       }\n//       return { ok: false, error: response?.data?.error };\n//     } catch (err) {\n//       dispatch(actHideLoading());\n//       return { ok: false, error: err.message }\n//     }\n//   }\n// }","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/user.reducer.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/auth.reducer.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/app.reducer.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/auth.action.ts",["255","256"],"\nimport axios from 'axios'\nimport { actSetUserInfor } from \"./user.action\";\nimport { Dispatch } from 'redux';\n\nimport { httpRequest, authService } from 'services';\n\nconst nameSpace = 'auth:';\n\nexport const LOGIN_SUCCESS = `${nameSpace}LOGIN_SUCCESS`;\nexport const LOGOUT_SUCCESS = `${nameSpace}LOGOUT_SUCCESS`;\nexport const SET_USER_DATA = `${nameSpace}SET_USER_DATA`;\n\nexport const actLoginSuccess = (token: string) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token\n  }\n}\n\nexport const actLogoutSuccess = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n    payload: {}\n  }\n}\n\ntype LoginDataType = {\n  email: string,\n}\n\nexport const asyncHandleLogin = (data: LoginDataType) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.get(`/user?email=${data.email}`);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Email not found'\n        }\n      }\n\n      const { token } = response.data[0];\n      return {\n        ok: true,\n        res: token\n      }\n    } catch (err) {\n      return { ok: false, res: \"Error. Please login again..\" }\n    }\n  }\n}\nexport const logout = () => (dispatch: Dispatch<any>) => {\n  authService.logOut();\n  dispatch({ type: LOGOUT_SUCCESS });\n};\n\nexport const setUserData = (user: any) => (dispatch: Dispatch<any>) => {\n  dispatch({ type: SET_USER_DATA, payload: user });\n};","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/app.action.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/Foods.tsx",["257","258","259"],"import React, { useState, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { TableBody, TableFooter } from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { useSelector } from 'react-redux'\nimport { listfoodSelector } from '../../selectors/food.selector'\n\nimport { TablePagination } from '@material-ui/core';\nimport TablePaginationActions from './TablePaginationActions'\n\n// import { CSVLink } from \"react-csv\";\nimport CsvDownloader from 'react-csv-downloader';\n\nimport {\n  FormControl,\n  InputAdornment,\n  TextField,\n  createStyles,\n  Button,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nimport { Link } from 'react-router-dom'\n\n\n// const useStyles2 = makeStyles(theme => ({\n//   root: {\n//     width: \"100%\",\n//     marginTop: theme.spacing(3)\n//   },\n//   table: {\n//     minWidth: 500\n//   },\n//   tableWrapper: {\n//     overflowX: \"auto\"\n//   }\n// }));\n\n\nfunction Foods() {\n  // use theme\n  const theme = useTheme()\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    search: {\n      margin: \"0\"\n    },\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  });\n\n\n  // const classes = useStyles();\n  const rows: any = useSelector(listfoodSelector)\n\n  // filter search data\n  const [showClearIcon, setShowClearIcon] = useState(\"none\");\n  const [searchData, setSearchData] = useState(\"\")\n  const [filter, setFilter] = useState([])\n  const [data, setData] = useState([])\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearchData(event.target.value)\n    setShowClearIcon(event.target.value === \"\" ? \"none\" : \"flex\");\n  };\n\n  useEffect(() => {\n    const fk_data = rows && rows.sort((a: any, b: any) => a.id < b.id ? -1 : 1)\n    setData(fk_data)\n  }, [rows, filter])\n\n  useEffect(() => {\n    setFilter(rows)\n    const dataFilter: any = filter.filter((item: any) => {\n      return item.name.toLowerCase().includes(searchData.toLowerCase());\n    })\n    setData(dataFilter)\n  }, [searchData])\n\n  // export csv\n  const headers: any = [\n    { label: \"First Name\", key: \"firstname\" },\n    { label: \"Last Name\", key: \"lastname\" },\n    { label: \"Email\", key: \"email\" }\n  ];\n  const csvReport: any = {\n    headers: headers,\n    data: rows && rows,\n    filename: 'FoodOnline.csv'\n  };\n\n  // pagination table \n\n  const defaultRowsPerPageOption = 5\n  const rowsPerPageOptions = [5, 10, 15]\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(\n    defaultRowsPerPageOption || rowsPerPageOptions[0]\n  );\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  function handleChangePage(event: any, newPage: number) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event: any) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <>\n      <FormControl className={classes.search}>\n        <TextField\n          size=\"small\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                style={{ display: showClearIcon }}\n              />\n            )\n          }}\n        />\n      </FormControl>\n      <Paper>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>STT</TableCell>\n                <TableCell>Foods Online</TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n                <TableCell align=\"right\">Quantity</TableCell>\n                <TableCell align=\"right\">Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data && data\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: any) => (\n                  <TableRow key={row.id}>\n                    <TableCell>{row.id}</TableCell>\n                    <TableCell align=\"left\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.price}&nbsp;$</TableCell>\n                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button type=\"button\">\n                        <Link to={`/foodsdetail/${row.id}`}>\n                          View Detail\n                    </Link>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  colSpan={3}\n                  count={data.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    value: rowsPerPage\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Paper>\n      <CsvDownloader\n        filename=\"FOODS_ONLINE\"\n        separator=\";\"\n        wrapColumnChar=\"'\"\n        datas={rows && rows}\n        text=\"DOWNLOAD_FOODS\" />\n    </>\n  );\n}\n\nexport default Foods\n\n\n\n","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/actions/food.action.ts",["260","261","262","263"],"import axios from 'axios'\nimport { Dispatch } from 'redux'\nimport { actLoginSuccess } from './auth.action'\n\n\nimport { httpRequest, authService } from 'services';\n\nconst nameSpace = 'food:';\n\nexport const FETCH_ALL_DATA_FOODS = `${nameSpace}FETCH_ALL_DATA_FOODS`\nexport const GET_FOOD_DETAIL_BY_ID = `${nameSpace}GET_FOOD_DETAIL_BY_ID`\nexport const GET_NEW_DATA_FOOD_UPDATE = `${nameSpace}GET_NEW_DATA_FOOD_UPDATE`\nexport const UPDATE_FOOD_DETAIL = `${nameSpace}UPDATE_FOOD_DETAIL`\n\ntype FOODS = {\n  foods: any\n}\ntype FOOD = {\n  food: any,\n}\ntype UPDATE_FOOD = {\n  food: any,\n  id: number\n}\n\ntype RegisterDataType = {\n  email: string,\n  firstname: string,\n  lastname: string,\n  gender: string,\n  language: string,\n  token: string\n}\n\n// food update \nexport const actNewFoodDataUpdate = (id: number, data: any) => ({\n  type: GET_NEW_DATA_FOOD_UPDATE,\n  payload: {\n    data,\n    id\n  }\n})\n\n// get all foods\nexport const actFetchFoodData = ({ foods }: FOODS) => {\n  return {\n    type: FETCH_ALL_DATA_FOODS,\n    payload: foods\n  }\n}\n\nexport const asyncFetchFoodData = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.get(`/foods`);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const foods = response.data;\n      dispatch(actFetchFoodData({ foods }))\n      return {\n        ok: true,\n        res: foods\n      }\n    } catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}\n\n\n// get food detail by id \nexport const actGetFoodDetailData = ({ food }: FOOD) => ({\n  type: GET_FOOD_DETAIL_BY_ID,\n  payload: food\n})\nexport const asyncFetchFoodDetailData = (id: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.get(`/foods?id=${id}`);\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const food = response.data;\n      dispatch(actGetFoodDetailData({ food }))\n      return {\n        ok: true,\n        res: food\n      }\n    } catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}\n\n\n// update food \nexport const actUpdateFood = ({ id, food }: UPDATE_FOOD) => ({\n  type: UPDATE_FOOD_DETAIL,\n  payload: {\n    food,\n    id\n  }\n})\n\nexport const asyncUpdateFood = (id: number, newData: any) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await httpRequest.put(`/foods/${id}`, JSON.stringify(newData[0]));\n      if (response.data.length === 0) {\n        return {\n          ok: false,\n          res: 'Food not found'\n        }\n      }\n      const food = response.data;\n      dispatch(actUpdateFood({ id, food }))\n      return {\n        ok: true,\n        res: food\n      }\n    }\n    catch (err) {\n      return { ok: false, res: \"Error. Please try again..\" }\n    }\n  }\n}","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/reducers/food.reducer.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/food.selector.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/FoodDetail/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/FoodDetail/FoodDetail.tsx",["264","265"],"import React, { useEffect, useState } from 'react';\n\n// react-router-dom\nimport { useParams } from 'react-router-dom'\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setDialog } from 'selectors/app.selector'\nimport { fooddetailSelector, listfoodSelector } from 'selectors/food.selector'\nimport { asyncFetchFoodDetailData, actNewFoodDataUpdate } from '../../actions/food.action'\nimport { actSetDialog } from 'actions/app.action'\n\nimport { Button, FormControl, TextField } from \"@material-ui/core\"\n\n\nfunction FoodDetail() {\n  interface ParamTypes {\n    id: string\n  }\n\n\n  const { id } = useParams<ParamTypes>()\n  const dispatch = useDispatch()\n  const dialog = useSelector(setDialog)\n  const [disabled, setDisabled] = useState(true)\n  const food: any = useSelector(fooddetailSelector)\n  const [data, setData] = useState({})\n  const [foodData, setFoodData] = useState([])\n\n  // fetch all data foods \n  useEffect(() => {\n    dispatch(asyncFetchFoodDetailData(id))\n  }, [id, dispatch])\n  useEffect(() => {\n    setFoodData(food)\n  }, [food])\n\n  // when we accept dialog to update food -> form input will be disable\n  useEffect(() => {\n    if (!dialog.isShow) {\n      setDisabled(true)\n    }\n  }, [dialog])\n\n  const _handleUpdateFood = (name: string, id: number) => {\n    if (disabled) {\n      setDisabled(!disabled)\n    }\n    else {\n      const isShow: boolean = true\n      const type: string = \"success\"\n      const content: string = `Are you sure to update ${name} food?`\n      dispatch(actNewFoodDataUpdate(id, data))\n      dispatch(actSetDialog(isShow, type, content))\n    }\n  }\n\n  function checkURL(url: string) {\n    return (url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n  }\n  const _handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fakeData: any = [...foodData]\n    fakeData[0] = {\n      ...fakeData[0],\n      [e.target.name]: e.target.value\n    }\n    setData(fakeData)\n  }\n  return (\n    <>\n      {\n        food && food.map((item: any) => (\n          <FormControl key={item.id}>\n            <div>\n              <span>Name:</span> <span>\n                <TextField\n                  name=\"name\"\n                  onChange={_handleOnChange}\n                  disabled={disabled}\n                  id=\"outlined-disabled\"\n                  defaultValue={item.name}\n                />\n              </span>\n            </div>\n            <div>\n              <span>Price:</span> <span>\n                <TextField\n                  name=\"price\"\n                  onChange={_handleOnChange}\n                  disabled={disabled}\n                  id=\"outlined-disabled\"\n                  defaultValue={`${item.price}`}\n                /> $\n                </span>\n            </div>\n            <div>\n              <span>Quantity:</span>\n              <TextField\n                name=\"quantity\"\n                onChange={_handleOnChange}\n                disabled={disabled}\n                id=\"outlined-disabled\"\n                defaultValue={item.quantity}\n              />\n            </div>\n            <div>\n              <span>Image url:</span>\n              <TextField\n                // value={data.url}\n                name=\"url\"\n                onChange={_handleOnChange}\n                disabled={disabled}\n                id=\"outlined-disabled\"\n                defaultValue={item.url}\n              />\n            </div>\n            <img className=\"image_food\" src={checkURL(item.url) ? item.url : \"https://shareprogramming.net/wp-content/plugins/accelerated-mobile-pages/images/SD-default-image.png\"} />\n            <Button onClick={() => _handleUpdateFood(item.name, item.id)}>{disabled ? \"Edit\" : \"Accept\"}</Button>\n          </FormControl>\n        ))\n      }\n    </>\n  )\n}\n\nexport default FoodDetail\n","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/features/Foods/TablePaginationActions.tsx",["266","267","268","269","270","271","272","273"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props: any) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n\n  function handleFirstPageButtonClick(event: any) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event: any) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event: any) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event: any) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n            <KeyboardArrowLeft />\n          )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n            <KeyboardArrowRight />\n          )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nexport default TablePaginationActions","/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Dialog/index.ts",[],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/components/Dialog/Dialog.tsx",["274"],"/Users/Macbookpro/Desktop/Framework/Training/food-online-react/src/selectors/app.selector.ts",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":17},{"ruleId":"279","severity":1,"message":"283","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":12},{"ruleId":"279","severity":1,"message":"284","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":19},{"ruleId":"279","severity":1,"message":"285","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":19},{"ruleId":"279","severity":1,"message":"286","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":18},{"ruleId":"279","severity":1,"message":"287","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":14},{"ruleId":"279","severity":1,"message":"280","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":17},{"ruleId":"279","severity":1,"message":"283","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":12},{"ruleId":"279","severity":1,"message":"284","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":19},{"ruleId":"279","severity":1,"message":"285","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":19},{"ruleId":"279","severity":1,"message":"286","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":18},{"ruleId":"279","severity":1,"message":"287","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":14},{"ruleId":"279","severity":1,"message":"288","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"289","line":94,"column":9,"nodeType":"281","messageId":"282","endLine":94,"endColumn":25},{"ruleId":"290","severity":1,"message":"291","line":16,"column":6,"nodeType":"292","endLine":16,"endColumn":8,"suggestions":"293"},{"ruleId":"279","severity":1,"message":"294","line":18,"column":23,"nodeType":"281","messageId":"282","endLine":18,"endColumn":34},{"ruleId":"279","severity":1,"message":"295","line":31,"column":11,"nodeType":"281","messageId":"282","endLine":31,"endColumn":24},{"ruleId":"290","severity":1,"message":"296","line":32,"column":6,"nodeType":"292","endLine":32,"endColumn":8,"suggestions":"297"},{"ruleId":"279","severity":1,"message":"298","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":25},{"ruleId":"279","severity":1,"message":"299","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":13},{"ruleId":"279","severity":1,"message":"300","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":25},{"ruleId":"279","severity":1,"message":"301","line":24,"column":3,"nodeType":"281","messageId":"282","endLine":24,"endColumn":15},{"ruleId":"290","severity":1,"message":"302","line":92,"column":6,"nodeType":"292","endLine":92,"endColumn":18,"suggestions":"303"},{"ruleId":"279","severity":1,"message":"304","line":100,"column":9,"nodeType":"281","messageId":"282","endLine":100,"endColumn":23},{"ruleId":"279","severity":1,"message":"299","line":1,"column":8,"nodeType":"281","messageId":"282","endLine":1,"endColumn":13},{"ruleId":"279","severity":1,"message":"298","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":25},{"ruleId":"279","severity":1,"message":"305","line":6,"column":23,"nodeType":"281","messageId":"282","endLine":6,"endColumn":34},{"ruleId":"279","severity":1,"message":"306","line":26,"column":6,"nodeType":"281","messageId":"282","endLine":26,"endColumn":22},{"ruleId":"279","severity":1,"message":"307","line":9,"column":30,"nodeType":"281","messageId":"282","endLine":9,"endColumn":46},{"ruleId":"308","severity":1,"message":"309","line":118,"column":13,"nodeType":"310","endLine":118,"endColumn":184},{"ruleId":"279","severity":1,"message":"311","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":17},{"ruleId":"279","severity":1,"message":"312","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":13},{"ruleId":"279","severity":1,"message":"313","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":17},{"ruleId":"279","severity":1,"message":"314","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":17},{"ruleId":"279","severity":1,"message":"315","line":7,"column":8,"nodeType":"281","messageId":"282","endLine":7,"endColumn":19},{"ruleId":"279","severity":1,"message":"316","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":23},{"ruleId":"279","severity":1,"message":"317","line":9,"column":8,"nodeType":"281","messageId":"282","endLine":9,"endColumn":16},{"ruleId":"279","severity":1,"message":"318","line":10,"column":8,"nodeType":"281","messageId":"282","endLine":10,"endColumn":13},{"ruleId":"279","severity":1,"message":"319","line":8,"column":8,"nodeType":"281","messageId":"282","endLine":8,"endColumn":19},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"@typescript-eslint/no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'renderMobileMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["322"],"'useSelector' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["323"],"'actLoginSuccess' is defined but never used.","'axios' is defined but never used.","'actSetUserInfor' is defined but never used.","'createStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'filter' and 'rows'. Either include them or remove the dependency array.",["324"],"'csvReport' is assigned a value but never used.","'authService' is defined but never used.","'RegisterDataType' is defined but never used.","'listfoodSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PropTypes' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableFooter' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [token]",{"range":"331","text":"332"},"Update the dependencies array to be: [dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [filter, rows, searchData]",{"range":"335","text":"336"},[249,251],"[token]",[1088,1090],"[dispatch]",[2389,2401],"[filter, rows, searchData]"]